#probamos el mejor modelo
def evaluate_model(model, X_test, y_test, model_name):
    predictions = model.predict(X_test)
    mse = mean_squared_error(y_test, predictions)
    r2 = r2_score(y_test, predictions)
    print(f"{model_name} - Test Mean Squared Error: {mse:.2f}")
    print(f"{model_name} - Test R^2 Score: {r2:.2f}")
    plot_predictions(y_test, predictions, model_name)
    #visualizaci√≥n de los valores actuales y del modelo predict 
    def plot_predictions(y_test, predictions, model_name):
    plt.figure(figsize=(10, 6))
    plt.scatter(y_test, predictions, alpha=0.3)
    plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], color="blue", linestyle='--')
    plt.xlabel("Actual Values")
    plt.ylabel("Predicted Values")
    plt.title(f'{model_name}: Actual vs Predicted Values')
    plt.show()
    for model_name, best_model in best_models.items():
    evaluate_model(best_model, X_test, y_test, model_name)
